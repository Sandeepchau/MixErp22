<?xml version="1.0" encoding="utf-8" ?>
<FrapidReport>
  <Header />
  <Title>Sales Invoice</Title>
  <TopSection>
    <table class="table horizontal">
      <tr>
        <td>{i18n.TranId}</td>
        <td>
          {DataSource[0].transaction_master_id}
        </td>
      </tr>
      <tr>
        <td>{i18n.TranCode}</td>
        <td>
          {DataSource[0].transaction_code}          
        </td>
      </tr>
      <tr>
        <td>{i18n.TransactionDate}</td>
        <td>{DataSource[0].transaction_ts}</td>
      </tr>
      <tr>
        <td>{i18n.ValueDate}</td>
        <td>{DataSource[0].value_date}</td>
      </tr>
      <tr>
        <td>{i18n.EnteredBy}</td>
        <td> {DataSource[0].entered_by}</td>
      </tr>
      <tr>
        <td>{i18n.TransactionStatus}</td>
        <td> {DataSource[0].status}</td>
      </tr>
      <tr>
        <td>{i18n.VerifiedBy}</td>
        <td> {DataSource[0].verified_by}</td>
      </tr>
      <tr>
        <td>{i18n.VerificationReason}</td>
        <td> {DataSource[0].verification_reason}</td>
      </tr>
      <tr>
        <td>{i18n.TranCode}</td>
        <td>{DataSource[0].transaction_code}</td>
      </tr>
      <tr>
        <td>{i18n.Office}</td>
        <td>{DataSource[0].office_name}</td>
      </tr>
      <tr>
        <td>{i18n.SalesType}</td>
        <td>{DataSource[0].sales_type}</td>
      </tr>
      <tr>
        <td>{i18n.CustomerName}</td>
        <td>{DataSource[0].customer_name}</td>
      </tr>
        <tr>
          <td>{i18n.CostCenter}</td>
          <td>{DataSource[0].cost_center_name}</td>
        </tr>
        <tr>
          <td>{i18n.StatementReference}</td>
          <td>{DataSource[0].statement_reference}</td>
        </tr>
    </table>
    <br />
  </TopSection>
  <Body>
    <Content>
      <h2>{i18n.InvoiceDetails}</h2>
    </Content>
    <GridViews>
      <GridView>
        <GridViewDataSource Index="1">
        </GridViewDataSource>
      </GridView>
    </GridViews>
  </Body>
  <BottomSection>
  <br />
	<table class="right aligned" style="width:300px;position:absolute;right:8px;">
		<tr>
			<td>
				{i18n.TaxableTotal}
			</td>
			<td data-remove-row-on-zero="" style="width:100px">
				{DataSource[0].taxable_total}
			</td>
		</tr>
		<tr>
			<td>
				{i18n.Discount}
			</td>
			<td data-remove-row-on-zero="">
				{DataSource[0].discount}
			</td>
		</tr>
		<tr>
			<td>
				{i18n.Tax} ({DataSource[0].tax_rate}%)
			</td>
			<td data-remove-row-on-zero="">
				{DataSource[0].tax}
			</td>
		</tr>
		<tr>
			<td>
				{i18n.SubTotal}
			</td>
			<td data-remove-row-on-zero="">
				{DataSource[0].sub_total}
			</td>
		</tr>
		<tr>
			<td>
				{i18n.NonTaxableTotal}
			</td>
			<td data-remove-row-on-zero="">
				{DataSource[0].nontaxable_total}
			</td>
		</tr>
		<tr>
			<td>
				{i18n.GrandTotal}
			</td>
			<td data-remove-row-on-zero="">
				{DataSource[0].total}
			</td>
		</tr>
	</table>
  </BottomSection>
  <DataSources>
    <DataSource>
      <Query>
        SELECT
			finance.transaction_master.transaction_master_id,
			finance.transaction_master.transaction_ts,
			finance.transaction_master.value_date,
			account.users.name AS entered_by,
			core.verification_statuses.verification_status_name AS status,
			verified_by_user.name AS verified_by,
			finance.transaction_master.verification_reason,
			finance.transaction_master.transaction_code,
			core.offices.office_name,
			finance.cost_centers.cost_center_name,
			finance.transaction_master.statement_reference,
			inventory.customers.customer_name,
			CASE 
				WHEN sales.sales.is_credit THEN 'Credit'
				WHEN sales.sales.tender > 0 THEN 'Cash'
				WHEN sales.sales.check_amount > 0 THEN 'Check'
			END AS sales_type,
			inventory.checkouts.taxable_total,
			inventory.checkouts.discount,
			inventory.checkouts.tax_rate,
			inventory.checkouts.tax,			
			COALESCE(inventory.checkouts.taxable_total, 0) +
			COALESCE(inventory.checkouts.tax, 0) -
			COALESCE(inventory.checkouts.discount, 0) AS sub_total,
			inventory.checkouts.nontaxable_total,
			COALESCE(inventory.checkouts.taxable_total, 0) + 
			COALESCE(inventory.checkouts.tax, 0) + 
			COALESCE(inventory.checkouts.nontaxable_total, 0) - 
			COALESCE(inventory.checkouts.discount, 0) AS total
        FROM finance.transaction_master
        INNER JOIN core.offices
        ON finance.transaction_master.office_id = core.offices.office_id
        LEFT JOIN finance.cost_centers
        ON finance.transaction_master.cost_center_id = finance.cost_centers.cost_center_id
        INNER JOIN inventory.checkouts
        ON finance.transaction_master.transaction_master_id = inventory.checkouts.transaction_master_id
        INNER JOIN account.users
        ON finance.transaction_master.user_id = account.users.user_id
        INNER JOIN sales.sales
        ON sales.sales.checkout_id = inventory.checkouts.checkout_id
        LEFT JOIN inventory.customers
        ON sales.sales.customer_id = inventory.customers.customer_id
        INNER JOIN core.verification_statuses
        ON finance.transaction_master.verification_status_id = core.verification_statuses.verification_status_id
        LEFT JOIN account.users AS verified_by_user
        ON finance.transaction_master.verified_by_user_id = verified_by_user.user_id
        WHERE finance.transaction_master.transaction_master_id=@transaction_master_id;
      </Query>
      <Parameters>
        <Parameter Name="@transaction_master_id" Type="Number" />
      </Parameters>
    </DataSource>
    <DataSource>
      <Query>
		SELECT
			inventory.stores.store_name,
			inventory.items.item_code,
			inventory.items.item_name,
			inventory.checkout_details.price,
			inventory.checkout_details.quantity,
			inventory.units.unit_name,
			ROUND(inventory.checkout_details.price * inventory.checkout_details.quantity, 4) AS amount,
			inventory.checkout_details.discount,
			ROUND((inventory.checkout_details.price * inventory.checkout_details.quantity) - inventory.checkout_details.discount, 4) AS sub_total,
			ROUND((inventory.checkout_details.price * inventory.checkout_details.quantity) - inventory.checkout_details.discount, 4) AS total
		FROM inventory.checkout_details
		INNER JOIN inventory.stores
		ON inventory.stores.store_id = inventory.checkout_details.store_id
		INNER JOIN inventory.items
		ON inventory.checkout_details.item_id = inventory.items.item_id
		INNER JOIN inventory.units
		ON inventory.checkout_details.unit_id = inventory.units.unit_id
		WHERE checkout_id =
		(
			SELECT inventory.checkouts.checkout_id
			FROM inventory.checkouts
			WHERE inventory.checkouts.transaction_master_id=@transaction_master_id
		)
		ORDER BY checkout_detail_id;
      </Query>
      <Parameters>
        <Parameter Name="@transaction_master_id" Type="long" />
      </Parameters>
      <RunningTotalTextColumnIndex>3</RunningTotalTextColumnIndex>
      <RunningTotalFieldIndices>4,6,7,8,9,10</RunningTotalFieldIndices>
    </DataSource>
  </DataSources>
</FrapidReport>